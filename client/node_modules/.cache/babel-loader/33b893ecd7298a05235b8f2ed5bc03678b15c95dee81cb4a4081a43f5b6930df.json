{"ast":null,"code":"'use strict';\n\nconst utils = require('./utils');\nmodule.exports = function (ast) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let stringify = function (node) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n    if (node.value) {\n      return node.value;\n    }\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n  return stringify(ast);\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}