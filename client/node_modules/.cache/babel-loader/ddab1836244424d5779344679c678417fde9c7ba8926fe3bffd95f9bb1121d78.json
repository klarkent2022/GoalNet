{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTarget = void 0;\nconst isPlainObj = require(\"is-plain-obj\");\nconst logger_1 = require(\"./logger\");\nconst logger = (0, logger_1.getInstance)();\nasync function getTarget(req, config) {\n  let newTarget;\n  const router = config.router;\n  if (isPlainObj(router)) {\n    newTarget = getTargetFromProxyTable(req, router);\n  } else if (typeof router === 'function') {\n    newTarget = await router(req);\n  }\n  return newTarget;\n}\nexports.getTarget = getTarget;\nfunction getTargetFromProxyTable(req, table) {\n  let result;\n  const host = req.headers.host;\n  const path = req.url;\n  const hostAndPath = host + path;\n  for (const [key] of Object.entries(table)) {\n    if (containsPath(key)) {\n      if (hostAndPath.indexOf(key) > -1) {\n        // match 'localhost:3000/api'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', key);\n        break;\n      }\n    } else {\n      if (key === host) {\n        // match 'localhost:3000'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', host);\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction containsPath(v) {\n  return v.indexOf('/') > -1;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}